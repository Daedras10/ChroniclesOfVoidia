//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Inputs/Inputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Inputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Inputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Inputs"",
    ""maps"": [
        {
            ""name"": ""Battle"",
            ""id"": ""dd5deb8d-d36a-436f-9aaa-881514b0f4c9"",
            ""actions"": [
                {
                    ""name"": ""PrimaryClick"",
                    ""type"": ""Button"",
                    ""id"": ""680f35ae-c8f2-4757-b5d6-bc6aa1cc6df8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryClick"",
                    ""type"": ""Button"",
                    ""id"": ""4bf9d437-10cc-4490-890e-2bf32302f19a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseMove"",
                    ""type"": ""Value"",
                    ""id"": ""2009e30a-703b-4318-9188-6e3fe1d6cc13"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseZoom"",
                    ""type"": ""Value"",
                    ""id"": ""a1f1f274-3db3-40c3-9fe4-d3c54b7f10fa"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseWheel"",
                    ""type"": ""Button"",
                    ""id"": ""fff02ec1-6a02-4ce7-b1b0-fdfbb9a8a685"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shift"",
                    ""type"": ""Button"",
                    ""id"": ""087a67a7-2dd9-4183-8295-6b559263beb5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tab"",
                    ""type"": ""Button"",
                    ""id"": ""ccacf548-1c0e-4c22-8001-5ddec1347f3b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""5e0f3f82-771d-4930-a3d6-1919877d525f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LAlt"",
                    ""type"": ""Button"",
                    ""id"": ""4eaae612-dafd-4a90-bdae-0330011cef5f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""879e74ac-9c34-47f9-960b-e300a92483fc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateCam"",
                    ""type"": ""Value"",
                    ""id"": ""45cfedd7-6b90-4fc1-a9a0-03f0c6e5a73c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ZoomCam"",
                    ""type"": ""Value"",
                    ""id"": ""5b9cb6d0-c865-45d9-a1cc-002cc8b5067f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a3643e4f-424e-44d9-87c4-4d8e5541484d"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PrimaryClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28b21ad9-ecfd-4f96-af29-2bc408bb5c78"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a07b3a72-f29c-4430-8821-6a0f9dc5423c"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a462f29b-19a5-4b63-928e-93276efc668f"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""0cfef0f3-0c3e-429d-bc42-04ba4cce7668"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseZoom"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""72a9bc99-c9ee-41bb-8c05-266ce8b7c141"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c7ff01bc-0c59-43b4-b704-75b47f5717e8"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseZoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""76b697b2-4fa2-42b3-851c-79fe8246e437"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a91aabb-b83a-4272-8678-b958ae4455d5"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""004c2764-7886-4e3a-a69b-5389701c61ab"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8e92bd4-8d29-4135-9db2-961c5aef957e"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LAlt"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""85bc395c-b94d-432b-ab98-f642f4648ee7"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""019a53f4-f8c3-4158-86d3-5fcdd338da45"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b6285820-3de5-4362-8a16-ae0a0438a225"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""55f8a408-9fdf-4d1e-a10d-b7bb75df9fd6"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ce76596f-c792-4ea3-b60d-18a6c8f4b46e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e977f946-b2ed-439d-8857-a1ad946fc444"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4508f08d-a04f-4636-88b6-e749dd6c0804"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ZoomCam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Battle
        m_Battle = asset.FindActionMap("Battle", throwIfNotFound: true);
        m_Battle_PrimaryClick = m_Battle.FindAction("PrimaryClick", throwIfNotFound: true);
        m_Battle_SecondaryClick = m_Battle.FindAction("SecondaryClick", throwIfNotFound: true);
        m_Battle_MouseMove = m_Battle.FindAction("MouseMove", throwIfNotFound: true);
        m_Battle_MouseZoom = m_Battle.FindAction("MouseZoom", throwIfNotFound: true);
        m_Battle_MouseWheel = m_Battle.FindAction("MouseWheel", throwIfNotFound: true);
        m_Battle_Shift = m_Battle.FindAction("Shift", throwIfNotFound: true);
        m_Battle_Tab = m_Battle.FindAction("Tab", throwIfNotFound: true);
        m_Battle_A = m_Battle.FindAction("A", throwIfNotFound: true);
        m_Battle_LAlt = m_Battle.FindAction("LAlt", throwIfNotFound: true);
        m_Battle_Movement = m_Battle.FindAction("Movement", throwIfNotFound: true);
        m_Battle_RotateCam = m_Battle.FindAction("RotateCam", throwIfNotFound: true);
        m_Battle_ZoomCam = m_Battle.FindAction("ZoomCam", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Battle
    private readonly InputActionMap m_Battle;
    private List<IBattleActions> m_BattleActionsCallbackInterfaces = new List<IBattleActions>();
    private readonly InputAction m_Battle_PrimaryClick;
    private readonly InputAction m_Battle_SecondaryClick;
    private readonly InputAction m_Battle_MouseMove;
    private readonly InputAction m_Battle_MouseZoom;
    private readonly InputAction m_Battle_MouseWheel;
    private readonly InputAction m_Battle_Shift;
    private readonly InputAction m_Battle_Tab;
    private readonly InputAction m_Battle_A;
    private readonly InputAction m_Battle_LAlt;
    private readonly InputAction m_Battle_Movement;
    private readonly InputAction m_Battle_RotateCam;
    private readonly InputAction m_Battle_ZoomCam;
    public struct BattleActions
    {
        private @Inputs m_Wrapper;
        public BattleActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @PrimaryClick => m_Wrapper.m_Battle_PrimaryClick;
        public InputAction @SecondaryClick => m_Wrapper.m_Battle_SecondaryClick;
        public InputAction @MouseMove => m_Wrapper.m_Battle_MouseMove;
        public InputAction @MouseZoom => m_Wrapper.m_Battle_MouseZoom;
        public InputAction @MouseWheel => m_Wrapper.m_Battle_MouseWheel;
        public InputAction @Shift => m_Wrapper.m_Battle_Shift;
        public InputAction @Tab => m_Wrapper.m_Battle_Tab;
        public InputAction @A => m_Wrapper.m_Battle_A;
        public InputAction @LAlt => m_Wrapper.m_Battle_LAlt;
        public InputAction @Movement => m_Wrapper.m_Battle_Movement;
        public InputAction @RotateCam => m_Wrapper.m_Battle_RotateCam;
        public InputAction @ZoomCam => m_Wrapper.m_Battle_ZoomCam;
        public InputActionMap Get() { return m_Wrapper.m_Battle; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BattleActions set) { return set.Get(); }
        public void AddCallbacks(IBattleActions instance)
        {
            if (instance == null || m_Wrapper.m_BattleActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_BattleActionsCallbackInterfaces.Add(instance);
            @PrimaryClick.started += instance.OnPrimaryClick;
            @PrimaryClick.performed += instance.OnPrimaryClick;
            @PrimaryClick.canceled += instance.OnPrimaryClick;
            @SecondaryClick.started += instance.OnSecondaryClick;
            @SecondaryClick.performed += instance.OnSecondaryClick;
            @SecondaryClick.canceled += instance.OnSecondaryClick;
            @MouseMove.started += instance.OnMouseMove;
            @MouseMove.performed += instance.OnMouseMove;
            @MouseMove.canceled += instance.OnMouseMove;
            @MouseZoom.started += instance.OnMouseZoom;
            @MouseZoom.performed += instance.OnMouseZoom;
            @MouseZoom.canceled += instance.OnMouseZoom;
            @MouseWheel.started += instance.OnMouseWheel;
            @MouseWheel.performed += instance.OnMouseWheel;
            @MouseWheel.canceled += instance.OnMouseWheel;
            @Shift.started += instance.OnShift;
            @Shift.performed += instance.OnShift;
            @Shift.canceled += instance.OnShift;
            @Tab.started += instance.OnTab;
            @Tab.performed += instance.OnTab;
            @Tab.canceled += instance.OnTab;
            @A.started += instance.OnA;
            @A.performed += instance.OnA;
            @A.canceled += instance.OnA;
            @LAlt.started += instance.OnLAlt;
            @LAlt.performed += instance.OnLAlt;
            @LAlt.canceled += instance.OnLAlt;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @RotateCam.started += instance.OnRotateCam;
            @RotateCam.performed += instance.OnRotateCam;
            @RotateCam.canceled += instance.OnRotateCam;
            @ZoomCam.started += instance.OnZoomCam;
            @ZoomCam.performed += instance.OnZoomCam;
            @ZoomCam.canceled += instance.OnZoomCam;
        }

        private void UnregisterCallbacks(IBattleActions instance)
        {
            @PrimaryClick.started -= instance.OnPrimaryClick;
            @PrimaryClick.performed -= instance.OnPrimaryClick;
            @PrimaryClick.canceled -= instance.OnPrimaryClick;
            @SecondaryClick.started -= instance.OnSecondaryClick;
            @SecondaryClick.performed -= instance.OnSecondaryClick;
            @SecondaryClick.canceled -= instance.OnSecondaryClick;
            @MouseMove.started -= instance.OnMouseMove;
            @MouseMove.performed -= instance.OnMouseMove;
            @MouseMove.canceled -= instance.OnMouseMove;
            @MouseZoom.started -= instance.OnMouseZoom;
            @MouseZoom.performed -= instance.OnMouseZoom;
            @MouseZoom.canceled -= instance.OnMouseZoom;
            @MouseWheel.started -= instance.OnMouseWheel;
            @MouseWheel.performed -= instance.OnMouseWheel;
            @MouseWheel.canceled -= instance.OnMouseWheel;
            @Shift.started -= instance.OnShift;
            @Shift.performed -= instance.OnShift;
            @Shift.canceled -= instance.OnShift;
            @Tab.started -= instance.OnTab;
            @Tab.performed -= instance.OnTab;
            @Tab.canceled -= instance.OnTab;
            @A.started -= instance.OnA;
            @A.performed -= instance.OnA;
            @A.canceled -= instance.OnA;
            @LAlt.started -= instance.OnLAlt;
            @LAlt.performed -= instance.OnLAlt;
            @LAlt.canceled -= instance.OnLAlt;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @RotateCam.started -= instance.OnRotateCam;
            @RotateCam.performed -= instance.OnRotateCam;
            @RotateCam.canceled -= instance.OnRotateCam;
            @ZoomCam.started -= instance.OnZoomCam;
            @ZoomCam.performed -= instance.OnZoomCam;
            @ZoomCam.canceled -= instance.OnZoomCam;
        }

        public void RemoveCallbacks(IBattleActions instance)
        {
            if (m_Wrapper.m_BattleActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IBattleActions instance)
        {
            foreach (var item in m_Wrapper.m_BattleActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_BattleActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public BattleActions @Battle => new BattleActions(this);
    public interface IBattleActions
    {
        void OnPrimaryClick(InputAction.CallbackContext context);
        void OnSecondaryClick(InputAction.CallbackContext context);
        void OnMouseMove(InputAction.CallbackContext context);
        void OnMouseZoom(InputAction.CallbackContext context);
        void OnMouseWheel(InputAction.CallbackContext context);
        void OnShift(InputAction.CallbackContext context);
        void OnTab(InputAction.CallbackContext context);
        void OnA(InputAction.CallbackContext context);
        void OnLAlt(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnRotateCam(InputAction.CallbackContext context);
        void OnZoomCam(InputAction.CallbackContext context);
    }
}
